import { Headers, XRPCError } from '@atproto/xrpc';
import { ValidationResult } from '@atproto/lexicon';
export interface QueryParams {
    includeUsed?: boolean;
    createAvailable?: boolean;
}
export declare type InputSchema = undefined;
export interface OutputSchema {
    codes: Invite[];
    [k: string]: unknown;
}
export interface CallOptions {
    headers?: Headers;
}
export interface Response {
    success: boolean;
    headers: Headers;
    data: OutputSchema;
}
export declare class DuplicateCreateError extends XRPCError {
    constructor(src: XRPCError);
}
export declare function toKnownErr(e: any): any;
export interface Invite {
    code: string;
    available: number;
    uses: number;
    [k: string]: unknown;
}
export declare function isInvite(v: unknown): v is Invite;
export declare function validateInvite(v: unknown): ValidationResult;
